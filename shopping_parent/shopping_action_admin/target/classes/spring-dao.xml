<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 配置整合mybatis -->
    <!-- 1.关联数据库文件 与database建立连接-->
    <mvc:property-placeholder location="classpath:dataSource.properties"></mvc:property-placeholder>
    <!-- 2.数据库连接池 -->
    <!--数据库连接池
        dbcp 半自动化操作 不能自动连接
        c3p0 自动化操作（自动的加载配置文件 并且设置到对象里面）
    -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driverClass}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>

        <!--  =====连接池的私有属性======= -->
        <!--初始化最大的连接数量-->
        <property name="initialSize" value="${jdbc.initialSize}"></property>
        <!--最小的空闲数量-->
        <property name="minIdle" value="${jdbc.minIdle}" />
        <!--最大的活跃的数量-->
        <property name="maxActive" value="${jdbc.maxActive}" />
        <!--最长的等待时间-->
        <property name="maxWait" value="${jdbc.maxWait}" />


        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，相当于C3P0的idleConnectionTestPeriod 参数，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis"    value="${jdbc.minEvictableIdleTimeMillis}" />
        <!-- 测试连接，单位为毫秒 -->
        <property name="validationQueryTimeout" value="300000" />
        <property name="validationQuery" value="${jdbc.validationQuery}" />
        <property name="testWhileIdle"   value="true" />
        <property name="testOnBorrow"    value="false" />
        <property name="testOnReturn"    value="false" />
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <!-- 如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="50" />




    </bean>

    <!--4.配置mybatis来执行SQL语句-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--1.连接数据库 -->
        <property name="dataSource" ref="dataSource"></property>
        <!--2.面向接口编程：接口\映射文件|实体类 -->
        <property name="mapperLocations" value="classpath:com/zying/shopping_parent/mapper/*.xml"></property>
        <!--3.加载实体类 -->
        <property name="typeAliasesPackage" value="com.zying.shopping_parent.bean"></property>
    </bean>
    <!--5.将配置之mybatis配置文件注入到spring核心容器中 -->
    <bean id="configurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 给出需要扫描Dao接口包 动态的实现了dao接口可以注入到spring中-->
        <property name="basePackage" value="com.zying.shopping_parent.dao"></property>
        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>

    </bean>
</beans>